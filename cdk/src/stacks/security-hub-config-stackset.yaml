AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ConfigBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ConfigBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AllowConfigServiceReadBucketAcl'
            Effect: 'Allow'
            Principal:
              Service: 'config.amazonaws.com'
            Action:
              - 's3:GetBucketAcl'
              - 's3:ListBucket'
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'

          - Sid: 'AllowConfigServiceWriteBucket'
            Effect: 'Allow'
            Principal:
              Service: 'config.amazonaws.com'
            Action:
              - 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'
                'AWS:SourceAccount': !Ref 'AWS::AccountId'

  ConfigSnsTopic:
    Type: 'AWS::SNS::Topic'

  ConfigSnsTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      Topics:
        - !Ref ConfigSnsTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AWSConfigSNSPolicy'
            Effect: 'Allow'
            Principal:
              Service: 'config.amazonaws.com'
            Action: 'sns:Publish'
            Resource: !Ref ConfigSnsTopic
            Condition:
              StringEquals:
                'AWS:SourceAccount': !Ref 'AWS::AccountId'

  ConfigRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'config.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWS_ConfigRole'

  ConfigRecorder:
    Type: 'AWS::Config::ConfigurationRecorder'
    Properties:
      RoleARN: !GetAtt ConfigRole.Arn
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  ConfigDeliveryChannel:
    Type: 'AWS::Config::DeliveryChannel'
    Properties:
      S3BucketName: !Ref ConfigBucket
      SnsTopicARN: !Ref ConfigSnsTopic
